/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-02-16 15:56:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class subjects_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "Les JSPs ne permettent que GET, POST ou HEAD. Jasper permet aussi OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>Test page</title>\n");
      out.write("\n");
      out.write("        <link rel=\"stylesheet\" href=\"../bootstrap/css/bootstrap.css\">\n");
      out.write("        <script type=\"text/javascript\" src=\"../js/jquery-3.3.1.min.js\"></script>\n");
      out.write("        <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js\" integrity=\"sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q\" crossorigin=\"anonymous\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../bootstrap/js/bootstrap.min.js\"></script>\n");
      out.write("\n");
      out.write("        <link rel=\"stylesheet\" href=\"../css/main.css\">\n");
      out.write("        <!-- Mandatory to use the sidebar -->\n");
      out.write("        <link rel=\"stylesheet\" href=\"../css/sidebar.css\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"../fontawesome/css/all.css\">\n");
      out.write("\n");
      out.write("        <script src=\"../js/test.js\"></script>\n");
      out.write("\n");
      out.write("        <!-- Bootstrap Table -->\n");
      out.write("        <link rel=\"stylesheet\" href=\"../bootstrap-table/dist/bootstrap-table.min.css\">\n");
      out.write("        \n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        \n");
      out.write("        \n");
      out.write("\n");
      out.write("        <nav class=\"navbar navbar-dark d-flex justify-content-space-between sticky-top\">\n");
      out.write("            <a class=\"navbar-brand\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.scheme}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(':');
      out.write('/');
      out.write('/');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.localName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(':');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.serverPort}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/SpringApp/homepage.do\">\n");
      out.write("                <button id=\"menu-toggle\" class=\"navbar-toggler mr-3 text-white\" type=\"button\" aria-label=\"Toggle navigation\" data-toggle-sidebar=\"MainSidebar\">\n");
      out.write("                    <span class=\"navbar-toggler-icon text-white\"></span>\n");
      out.write("                </button>\n");
      out.write("                <img src=\"../img/logo.png\" height=\"40\" alt=\"\">\n");
      out.write("            </a>\n");
      out.write("        \n");
      out.write("            <a class=\"navbar-brand\" href=\"#\">\n");
      out.write("                <i class=\"fa fa-user icon\"></i>\n");
      out.write("            </a>\n");
      out.write("        </nav>\n");
      out.write("\n");
      out.write("        <div id=\"page\" class=\"active\">\n");
      out.write("            <div id=\"Sidebar\">\n");
      out.write("                <!-- \n");
      out.write("                    DO NOT CHANGE DIV ID\n");
      out.write("                    The content of the sidebar will be loaded here\n");
      out.write("                    See navbar.jsp to modify the sidebar -->\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            \n");
      out.write("            <!-- Page content : YOU MUST PUT THE CONTENT OF THE PAGE HERE -->\n");
      out.write("            <div class=\"page-content\">\n");
      out.write("                <div class=\"container-fluid\">\n");
      out.write("                    \n");
      out.write("                    <div id=\"toolbar\">\n");
      out.write("                        <h2>Liste des mati√®res</h2>\n");
      out.write("                    </div>\n");
      out.write("                    \n");
      out.write("                    <table\n");
      out.write("                        data-toggle=\"table\"\n");
      out.write("                        data-url=\"../json/jsonSubjects.do\"\n");
      out.write("                        data-toolbar=\"#toolbar\"\n");
      out.write("                        data-pagination=\"true\"\n");
      out.write("                        data-page-size=\"25\"\n");
      out.write("                        data-show-refresh=\"true\"\n");
      out.write("                        data-show-columns=\"true\"\n");
      out.write("                        data-height=\"800\"\n");
      out.write("                        >\n");
      out.write("                        <thead>\n");
      out.write("                            <tr>\n");
      out.write("                                <th data-field=\"idSubject\" data-visible=\"false\">ID</th>\n");
      out.write("                                <th data-field=\"subjectAcronym\">Acronyme</th>\n");
      out.write("                                <th data-field=\"subjectName\">Nom</th>\n");
      out.write("                                <th data-field=\"subjectCode\">Code</th>\n");
      out.write("                            </tr>\n");
      out.write("                        </thead>\n");
      out.write("                    </table>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            <!-- End Page content -->\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("\n");
      out.write("        \n");
      out.write("\n");
      out.write("    <script type=\"module\" src=\"../bootstrap-table/dist/bootstrap-table.min.js\"></script>\n");
      out.write("    </body>\n");
      out.write("\n");
      out.write("      <script>\n");
      out.write("        $.ajax({\n");
      out.write("            'url': '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.scheme}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(':');
      out.write('/');
      out.write('/');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.localName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(':');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.serverPort}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/SpringApp/sidebar.do',\n");
      out.write("            'type': 'get',\n");
      out.write("            'dataType': 'html'\n");
      out.write("        })\n");
      out.write("        .done(function (response) {\n");
      out.write("            $('#Sidebar').append(response);\n");
      out.write("        })\n");
      out.write("      </script>\n");
      out.write("\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
