/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-02-16 15:54:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class sidebar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "Les JSPs ne permettent que GET, POST ou HEAD. Jasper permet aussi OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<div id=\"MainSidebar\" class=\"sidebar\" aria-label=\"Main sidebar containing navigation links and some information\" aria-hidden=\"false\">\n");
      out.write("    <div class=\"sidebar__content\">\n");
      out.write("        <div id=\"AdministratifMenu\">\n");
      out.write("            <li><h5 class=\"pt-3 text-secondary\">Administratif</h5></li>\n");
      out.write("            <li> \n");
      out.write("                <a href=\"#\">\n");
      out.write("                    <div class=\"row\">\n");
      out.write("                        <div class=\"col-8\"><span>Dashboard</span></div>\n");
      out.write("                        <div class=\"col-4\"><span class=\"fa fa-chevron-right mr-3\"></span></div>\n");
      out.write("                        \n");
      out.write("                    </div>\n");
      out.write("                </a>\n");
      out.write("            </li>\n");
      out.write("            <li> \n");
      out.write("                <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.scheme}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(':');
      out.write('/');
      out.write('/');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.localName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(':');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.serverPort}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/SpringApp/admin/subjects.do\">\n");
      out.write("                    <div class=\"row\">\n");
      out.write("                        <div class=\"col-8\"><span>Liste des matières</span></div>\n");
      out.write("                        <div class=\"col-4\"><span class=\"fa fa-chevron-right mr-3\"></span></div>\n");
      out.write("\n");
      out.write("                    </div>\n");
      out.write("                </a>\n");
      out.write("            </li>\n");
      out.write("            <li> \n");
      out.write("                <a href=\"#\">\n");
      out.write("                    <div class=\"row\">\n");
      out.write("                        <div class=\"col-8\"><span>Liste des synthèses</span></div>\n");
      out.write("                        <div class=\"col-4\"><span class=\"fa fa-chevron-right mr-3\"></span></div>\n");
      out.write("                        \n");
      out.write("                    </div>\n");
      out.write("                </a>\n");
      out.write("            </li>\n");
      out.write("        </div>\n");
      out.write("        <hr>\n");
      out.write("        <div id=\"MatièresMenu\">\n");
      out.write("            <li><h5 class=\"text-secondary\">Options disciplinaires</h5></li>\n");
      out.write("            <li> \n");
      out.write("                <a href=\"#\" data-toggle-sidebar=\"INFO-SI\">\n");
      out.write("                    <div class=\"row\">\n");
      out.write("                        <div class=\"col-8\">\n");
      out.write("                            <span>Cliquez ici !!!!!</span>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"col-4\"><span class=\"fa fa-chevron-right mr-3\"></span></div>\n");
      out.write("                    </div>\n");
      out.write("                </a>\n");
      out.write("            </li>\n");
      out.write("            <li> \n");
      out.write("                <a href=\"#\">\n");
      out.write("                    <div class=\"row\">\n");
      out.write("                        <div class=\"col-8\"><span>INFO-IA</span></div>\n");
      out.write("                        <div class=\"col-4\"><span class=\"fa fa-chevron-right mr-3\"></span></div>  \n");
      out.write("                    </div>\n");
      out.write("                </a>\n");
      out.write("            </li>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<!-- Sub Sidebar : Shown when we select a menu in the main sidebar -->\n");
      out.write("<div id=\"INFO-SI\" class=\"sidebar\" aria-label=\"Main sidebar containing navigation links and some information\" aria-hidden=\"true\">\n");
      out.write("    <div class=\"sidebar__content\">\n");
      out.write("        <div id=\"AdministratifMenu\">\n");
      out.write("            <li>\n");
      out.write("                <a href=\"#\" data-toggle-sidebar=\"INFO-SI\">\n");
      out.write("                    <div class=\"row pt-3\">\n");
      out.write("                        <div class=\"col-2\"><span class=\"fa fa-chevron-left arrow text-secondary\"></span></div>\n");
      out.write("                        <div class=\"col-10\"><h5 class=\"text-secondary arrow\">INFO-SI - Matières</h5></div>\n");
      out.write("                        \n");
      out.write("                    </div>\n");
      out.write("                </a>\n");
      out.write("            </li>\n");
      out.write("            <li> \n");
      out.write("                <a href=\"#\">\n");
      out.write("                    <div class=\"row\">\n");
      out.write("                        <div class=\"col-8\"><span>PRWEB</span></div>\n");
      out.write("                        <div class=\"col-4\"><span class=\"fa fa-chevron-right mr-3\"></span></div>\n");
      out.write("                        \n");
      out.write("                    </div>\n");
      out.write("                </a>\n");
      out.write("            </li>\n");
      out.write("            <li> \n");
      out.write("                <a href=\"#\">\n");
      out.write("                    <div class=\"row\">\n");
      out.write("                        <div class=\"col-8\"><span>DEVMO</span></div>\n");
      out.write("                        <div class=\"col-4\"><span class=\"fa fa-chevron-right mr-3\"></span></div>\n");
      out.write("\n");
      out.write("                    </div>\n");
      out.write("                </a>\n");
      out.write("            </li>\n");
      out.write("            <li> \n");
      out.write("                <a href=\"#\">\n");
      out.write("                    <div class=\"row\">\n");
      out.write("                        <div class=\"col-8\"><span>TLANG</span></div>\n");
      out.write("                        <div class=\"col-4\"><span class=\"fa fa-chevron-right mr-3\"></span></div>\n");
      out.write("                        \n");
      out.write("                    </div>\n");
      out.write("                </a>\n");
      out.write("            </li>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("\n");
      out.write("    function toggleAllSidebar(){\n");
      out.write("        document.querySelectorAll('[data-toggle-sidebar]').forEach(toggle => {\n");
      out.write("            const sidebarID = toggle.dataset.toggleSidebar;\n");
      out.write("            // check if there is an element on the doc with the id\n");
      out.write("            const sidebarElement = sidebarID ? document.getElementById(sidebarID) : undefined;\n");
      out.write("            // if there is a sidebar with the passed id (data-toggle-sidebar)\n");
      out.write("            if (sidebarElement) {\n");
      out.write("                // toggle the aria-hidden state of the given sidebar\n");
      out.write("                let sidebarState = sidebarElement.getAttribute('aria-hidden');\n");
      out.write("                sidebarElement.setAttribute('aria-hidden', true); \n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // Catch all the `[data-toggle-sidebar]` elements on the document.\n");
      out.write("    document.querySelectorAll('[data-toggle-sidebar]').forEach(toggle => {\n");
      out.write("        // Add an event listener on those elements \"click\" event\n");
      out.write("        toggle.addEventListener('click', e => {\n");
      out.write("        // get the sidebar ID from the current element data attribute\n");
      out.write("        const sidebarID = toggle.dataset.toggleSidebar;\n");
      out.write("        // check if there is an element on the doc with the id\n");
      out.write("        const sidebarElement = sidebarID ? document.getElementById(sidebarID) : undefined;\n");
      out.write("        // if there is a sidebar with the passed id (data-toggle-sidebar)\n");
      out.write("        if (sidebarElement) {\n");
      out.write("            // toggle the aria-hidden state of the given sidebar\n");
      out.write("            let sidebarState = sidebarElement.getAttribute('aria-hidden');\n");
      out.write("            sidebarElement.setAttribute('aria-hidden', sidebarState == 'true' ? false : true); \n");
      out.write("\n");
      out.write("            // If we toggle MainSidebar we want all sidebar to close\n");
      out.write("            if (sidebarID == \"MainSidebar\"){\n");
      out.write("                if (sidebarState == 'false'){\n");
      out.write("                    toggleAllSidebar();\n");
      out.write("                }\n");
      out.write("            \n");
      out.write("                $(\"#page\").toggleClass(\"active\")\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        });\n");
      out.write("    });\n");
      out.write("     \n");
      out.write("    $(function(){\n");
      out.write("\n");
      out.write("      $(window).resize(function(e) {\n");
      out.write("        if($(window).width()<=768){\n");
      out.write("            document.querySelectorAll('[data-toggle-sidebar]').forEach(toggle => {\n");
      out.write("                // get the sidebar ID from the current element data attribute\n");
      out.write("                const sidebarID = toggle.dataset.toggleSidebar;\n");
      out.write("                // check if there is an element on the doc with the id\n");
      out.write("                const sidebarElement = sidebarID ? document.getElementById(sidebarID) : undefined;\n");
      out.write("                \n");
      out.write("                // toggle the aria-hidden state of the given sidebar\n");
      out.write("                let sidebarState = sidebarElement.getAttribute('aria-hidden');\n");
      out.write("                sidebarElement.setAttribute('aria-hidden', true); \n");
      out.write("                \n");
      out.write("            });\n");
      out.write("            $(\"#page\").removeClass(\"active\");\n");
      out.write("            \n");
      out.write("        }else{\n");
      out.write("            document.querySelectorAll('[data-toggle-sidebar]').forEach(toggle => {\n");
      out.write("                // get the sidebar ID from the current element data attribute\n");
      out.write("                const sidebarID = toggle.dataset.toggleSidebar;\n");
      out.write("\n");
      out.write("                if (sidebarID == \"MainSidebar\"){\n");
      out.write("                    // check if there is an element on the doc with the id\n");
      out.write("                    const sidebarElement = sidebarID ? document.getElementById(sidebarID) : undefined;\n");
      out.write("                    \n");
      out.write("                    // toggle the aria-hidden state of the given sidebar\n");
      out.write("                    let sidebarState = sidebarElement.getAttribute('aria-hidden');\n");
      out.write("                    sidebarElement.setAttribute('aria-hidden', false); \n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("            $(\"#page\").addClass(\"active\");\n");
      out.write("        }\n");
      out.write("      });\n");
      out.write("    });\n");
      out.write("  </script>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
